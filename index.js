require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

// –°–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
function getClothingAdvice(feelsLike, description) {
    let advice = "";
  
    if (feelsLike < 0) {
      advice = "ü•∂ –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –ù–∞–¥–µ–Ω—å —Ç—ë–ø–ª—É—é –∫—É—Ä—Ç–∫—É, —à–∞–ø–∫—É –∏ –ø–µ—Ä—á–∞—Ç–∫–∏.";
    } else if (feelsLike < 10) {
      advice = "üß• –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ. –õ—É—á—à–µ –Ω–∞–¥–µ—Ç—å –∫—É—Ä—Ç–∫—É –∏ –∑–∞–∫—Ä—ã—Ç—É—é –æ–±—É–≤—å.";
    } else if (feelsLike < 20) {
      advice = "üëï –ù–µ–º–Ω–æ–≥–æ –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ. –ù–∞–¥–µ–Ω—å –∫–æ—Ñ—Ç—É –∏–ª–∏ —Ç–æ–ª—Å—Ç–æ–≤–∫—É.";
    } else if (feelsLike < 25) {
      advice = "üòä –ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ. –ü–æ–¥–æ–π–¥—ë—Ç –ª—ë–≥–∫–∞—è –æ–¥–µ–∂–¥–∞.";
    } else {
      advice = "ü•µ –ñ–∞—Ä–∫–æ! –ù–∞–¥–µ–Ω—å —Ñ—É—Ç–±–æ–ª–∫—É –∏ –≤–æ–∑—å–º–∏ –≤–æ–¥—É.";
    }
  
    if (description.includes("–¥–æ–∂–¥") || description.includes("–¥—É—à")) {
      advice += " ‚òî –¢–∞–∫–∂–µ –∑–∞—Ö–≤–∞—Ç–∏ –∑–æ–Ω—Ç ‚Äî –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –¥–æ–∂–¥—å.";
    }
  
    if (description.includes("—Å–Ω–µ–≥")) {
      advice += " ‚ùÑÔ∏è –ò–¥—ë—Ç —Å–Ω–µ–≥, –æ–¥–µ–≤–∞–π—Å—è —Ç–µ–ø–ª–µ–µ –∏ –æ–±—É–≤—å –Ω–µ —Å–∫–æ–ª—å–∑–∫—É—é!";
    }
  
    return advice;
  }
  


async function getWeather(city) {
    const apiKey=process.env.WEATHER_API_KEY;
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city)}&appid=${apiKey}&units=metric&lang=ru`;

    try {
        const response =await axios.get(url);
        const data =response.data;

        const temp =data.main.temp;
        const feelsLike = data.main.feels_like;
        const desc =data.weather[0].description;
        const advice = getClothingAdvice(feelsLike, desc);

        return  `
        üå§ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${data.name}:
        üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C
        ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${feelsLike}¬∞C
        üìã –û–ø–∏—Å–∞–Ω–∏–µ: ${desc}
        üß† –°–æ–≤–µ—Ç: ${advice}
        `;

        

    } catch (error) {
        return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≥–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.";
    }
}

bot.on("message", async(msg)=>{
    const chatID =msg.chat.id;
    const text=msg.text;

    const weather =await getWeather(text);
    bot.sendMessage(chatID,weather)
})
